version: "3.8"
services:
  db:
    image: postgres:15
    container_name: todo_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [todo-net]
    ports:
      - "5432:5432"
  backend_blue:
    image: gauravj00/todo-backend:latest
    container_name: backend_blue
    networks: [todo-net]
    environment:
      - DJANGO_ALLOWED_HOSTS=54.89.166.189,localhost,127.0.0.1,backend_blue,backend_blue_upstream,backend_green_upstream
      - POSTGRES_HOST=db
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=todo_pass
    depends_on:
      - db
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend_green:
    image: gauravj00/todo-backend:latest
    container_name: backend_green
    networks: [todo-net]
    environment:
      - DJANGO_ALLOWED_HOSTS=54.89.166.189,localhost,127.0.0.1,backend_green:8000,backend_green_upstream,backend_blue_upstream
      - POSTGRES_HOST=db
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=todo_pass
    depends_on:
      - db
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend_blue:
    image: gauravj00/todo-frontend:latest
    container_name: frontend_blue
    networks: [todo-net]
    ports:
      - "3001:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend_green:
    image: gauravj00/todo-frontend:latest
    container_name: frontend_green
    networks: [todo-net]
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:stable
    container_name: todo_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks: [todo-net]

networks:
  todo-net:

volumes:
  postgres_data:

